name: Build Pipeline
on:
  push:
    branches:
      - "1.19"
  pull_request:
    branches:
      - "1.19"

jobs:
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      branchName: ${{ steps.gitversion.outputs.branchName }}
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: "5.x"
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
          useConfigFile: true
  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: calculate-version
    env:
      BRANCH_NAME: ${{ needs.calculate-version.outputs.branchName }}
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Notify Discord of Run Start
        if: github.event_name != 'pull_request'
        run: ${PWD}/scripts/discord-notify started 3224808 ${{ github.event.repository.name }} ${{ github.run_number }}
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "17"
      - name: Build Project
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: build
      - name: Notify Discord of Succeeded Build
        if: (github.event_name != 'pull_request') && success()
        run: ${PWD}/scripts/discord-notify Succeeded 3470945 ${{ github.event.repository.name }} ${{ github.run_number }}
      - name: Notify Discord of Failed Build
        if: (github.event_name != 'pull_request') && failure()
        run: ${PWD}/scripts/discord-notify Failed 16071463 ${{ github.event.repository.name }} ${{ github.run_number }}
  deploy:
    name: Deploy Project
    runs-on: ubuntu-latest
    needs: [calculate-version, build]
    if: needs.calculate-version.outputs.branchName == '1.19'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy to CloudSmith
        # Disabled deploy to CloudSmith
        if: false
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: publishMainPublicationToCloudsmithRepository
      - name: Deploy to CurseForge
        # Disabled deploy to CurseForge
        if: false
        env:
          CURSEFORGE_KEY: ${{ secrets.CURSEFORGE_APIKEY }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: publishCurseForge
  tag-latest-version:
    name: Tag Latest Released Version
    runs-on: ubuntu-latest
    needs: [calculate-version, build, deploy]
    if: needs.calculate-version.outputs.branchName == '1.19'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create Tag
        uses: actions/github-script@v6
        with:
          debug: true
          script: |
            const tagValue = `v${{ needs.calculate-version.outputs.branchName }}-${{ needs.calculate-version.outputs.semVer }}`
            const tag = await github.rest.git.createTag({
              owner: "${{ github.event.repository.owner.login }}",
              repo: "${{ github.event.repository.name }}",
              tag: `${tagValue}`,
              message: `Tagging release: ${tagValue}`,
              object: "${{ github.sha }}",
              type: 'commit',
              tagger: {
                name: "Jacob Williams",
                email: 'jacob.t.williams@outlook.com'
              }
            })
            console.log(tag)
            github.rest.git.createRef({
              owner: "${{ github.event.repository.owner.login }}",
              repo: "${{ github.event.repository.name }}",
              ref: `refs/tags/${tag.tag}`,
              sha: tag.sha
            })
