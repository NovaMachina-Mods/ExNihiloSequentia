name: Build Pipeline
on:
  push:
    branches:
      - "1.19"
  pull_request:
    branches:
      - "1.19"

jobs:
  build:
    name: Build Project
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Notify Discord of Run Start
        if: github.event_name != 'pull_request'
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Build Started for ${{github.event.repository.name}}
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "17"
      - name: Build Project
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: build
      - name: Notify Discord of Succeeded Build
        if: (github.event_name != 'pull_request') && success()
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Build Succeeded for ${{github.event.repository.name}}
      - name: Notify Discord of Failed Build
        if: (github.event_name != 'pull_request') && failure()
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Build Failed for ${{github.event.repository.name}}

  deploy:
    name: Deploy Project
    runs-on: ubuntu-latest
#    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Notify Discord of Deploy
        if: false
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Deploy Started for ${{github.event.repository.name}}
      - name: Deploy to CloudSmith
        if: false
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: publishMainPublicationToCloudsmithRepository
      - name: Restore Last Successful Build SHA from Cache
        id: last-success-sha-restore
        uses: actions/cache/restore@v3
        with:
          path: last-success-sha
          key: ${{ runner.os }}-last-success-sha
      - name: Write Last Successful Build SHA to Env Var
        run: ${GITHUB_WORKSPACE}/scripts/restore-last-build-sah
      - name: Deploy to CurseForge
        if: false
        env:
          CURSEFORGE_KEY: ${{ secrets.CURSEFORGE_APIKEY }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: publishCurseForge
      - name: Notify Discord of Succeeded Build
        if: false && success()
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Deploy Succeeded for ${{github.event.repository.name}}
      - name: Write ChangeLog
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: makeChangelog
      - name: printChangelog
        run: |
          cat changelog.html
      - name: Write Last Successful Build SHA to file
        if: success()
        run: ${GITHUB_WORKSPACE}/scripts/save-last-build-sah
      - name: Write Last Successful Build SHA to Cache
        if: success()
        id: last-success-sha-save
        uses: actions/cache/save@v3
        with:
          path: last-success-sha
          key: ${{ runner.os }}-last-success-sha
      - name: Notify Discord of Failed Build
        if: false && failure()
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Deploy Failed for ${{github.event.repository.name}}
  tag-latest-version:
    name: Tag Latest Released Version
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create Tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ needs.initialize-pipeline.outputs.semVer }}
          create_annotated_tag: true
