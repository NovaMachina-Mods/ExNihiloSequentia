name: Build Pipeline
on:
  push:
    branches:
      - "1.19"
  pull_request:
    branches:
      - "1.19"

jobs:
  initialize-pipeline:
    name: Initialize Pipeline
    runs-on: ubuntu-latest
    outputs:
      branchName: ${{ steps.gitversion.outputs.branchName }}
      semVer: ${{ steps.gitversion.outputs.semVer }}
      short-sha: ${{steps.short-sha.outputs.sha}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: "5.x"
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
          useConfigFile: true
      - uses: benjlevesque/short-sha@v2.1
        id: short-sha
  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: initialize-pipeline
    env:
      BRANCH_NAME: ${{ needs.initialize-pipeline.outputs.branchName }}
      SEMVER: ${{ needs.initialize-pipeline.outputs.semVer }}
      SHA: ${{ needs.initialize-pipeline.outputs.short-sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Notify Discord of Run Start
        if: github.event_name != 'pull_request'
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Build Started for ${{github.event.repository.name}} {{SEMVER}}
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "17"
      - name: Build Project
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: build
      - name: Notify Discord of Succeeded Build
        if: (github.event_name != 'pull_request') && success()
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Build Succeeded for ${{github.event.repository.name}} {{SEMVER}}
      - name: Notify Discord of Failed Build
        if: (github.event_name != 'pull_request') && failure()
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Build Failed for ${{github.event.repository.name}} {{SEMVER}}
  deploy:
    name: Deploy Project
    runs-on: ubuntu-latest
    needs: [initialize-pipeline, build]
    if: needs.initialize-pipeline.outputs.branchName == '1.19'
    env:
      BRANCH_NAME: ${{ needs.initialize-pipeline.outputs.branchName }}
      SEMVER: ${{ needs.initialize-pipeline.outputs.semVer }}
      SHA: ${{ needs.initialize-pipeline.outputs.short-sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Notify Discord of Deploy Start
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Deploy Started for ${{github.event.repository.name}} {{SEMVER}}
      - name: Deploy to CloudSmith
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: publishMainPublicationToCloudsmithRepository
      - name: Deploy to CurseForge
        env:
          CURSEFORGE_KEY: ${{ secrets.CURSEFORGE_APIKEY }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: publishCurseForge
      - name: Notify Discord of Succeeded Build
        if: success()
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Deploy Succeeded for ${{github.event.repository.name}} {{SEMVER}}
      - name: Notify Discord of Failed Build
        if: failure()
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Deploy Failed for ${{github.event.repository.name}} {{SEMVER}}
  tag-latest-version:
    name: Tag Latest Released Version
    runs-on: ubuntu-latest
    needs: [initialize-pipeline, build, deploy]
    if: needs.initialize-pipeline.outputs.branchName == '1.19'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create Tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ needs.initialize-pipeline.outputs.semVer }}
          create_annotated_tag: true
