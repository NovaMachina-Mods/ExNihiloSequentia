name: Build Pipeline
on:
  push:
    branches:
      - "1.19"
  pull_request:
    branches:
      - "1.19"

jobs:
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      branchName: ${{ steps.gitversion.outputs.branchName }}
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: "5.x"
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
          useConfigFile: true
  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: calculate-version
    env:
      BRANCH_NAME: ${{ needs.calculate-version.outputs.branchName }}
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Notify Discord of Run Start
        if: github.event_name != 'pull_request'
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBED: '[    {
            "author": {  "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}", "name": "${{ github.actor }}", "url": "https://github.com/${{github.actor}}" },
            "url": "https://github.com/${{github.repository}}/commit/${{github.sha}}",
            "fields": [
            { "name": "Repository", "value": "[${{github.event.repository.name}}](${{github.event.repository.clone_url}})", "inline": true },
            { "name": "Branch", "value": "[${{github.ref_name}}](https://github.com/${{github.repository}}/tree/${{github.ref_name}})", "inline": true },
            { "name": "Event", "value": "${{github.event_name}}", "inline": true },
            { "name": "Job", "value": "${{github.job}}", "inline": true },
            { "name": "Commit Message", "value": "[${{ env.SHA }}](https://github.com/${{github.repository}}/commit/${{github.sha}}) - `${{github.event.head_commit.message}}`" },
            { "name": "Author", "value": "[${{github.event.head_commit.author.name}}](https://github.com/${{github.actor}})" }
            ],
            "color":1127128,
            "timestamp": "${{github.event.head_commit.timestamp}}",
            "footer":{"text": "${{github.event.head_commit.timestamp}}"}
            }    ]'
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "17"
      - name: Build Project
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: build
      - name: Notify Discord of Succeeded Build
        if: (github.event_name != 'pull_request') && success()
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBED: '[    {
            "author": {  "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}", "name": "${{ github.actor }}", "url": "https://github.com/${{github.actor}}" },
            "url": "https://github.com/${{github.repository}}/commit/${{github.sha}}",
            "fields": [
            { "name": "Repository", "value": "[${{github.event.repository.name}}](${{github.event.repository.clone_url}})", "inline": true },
            { "name": "Branch", "value": "[${{github.ref_name}}](https://github.com/${{github.repository}}/tree/${{github.ref_name}})", "inline": true },
            { "name": "Event", "value": "${{github.event_name}}", "inline": true },
            { "name": "Job", "value": "${{github.job}}", "inline": true },
            { "name": "Commit Message", "value": "[${{ env.SHA }}](https://github.com/${{github.repository}}/commit/${{github.sha}}) - `${{github.event.head_commit.message}}`" },
            { "name": "Author", "value": "[${{github.event.head_commit.author.name}}](https://github.com/${{github.actor}})" }
            ],
            "color":1127128,
            "timestamp": "${{github.event.head_commit.timestamp}}",
            "footer":{"text": "${{github.event.head_commit.timestamp}}"}
            }    ]'
      - name: Notify Discord of Failed Build
        if: (github.event_name != 'pull_request') && failure()
        uses: "Ilshidur/action-discord@0.3.2"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBED: '[    {
            "author": {  "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}", "name": "${{ github.actor }}", "url": "https://github.com/${{github.actor}}" },
            "url": "https://github.com/${{github.repository}}/commit/${{github.sha}}",
            "fields": [
            { "name": "Repository", "value": "[${{github.event.repository.name}}](${{github.event.repository.clone_url}})", "inline": true },
            { "name": "Branch", "value": "[${{github.ref_name}}](https://github.com/${{github.repository}}/tree/${{github.ref_name}})", "inline": true },
            { "name": "Event", "value": "${{github.event_name}}", "inline": true },
            { "name": "Job", "value": "${{github.job}}", "inline": true },
            { "name": "Commit Message", "value": "[${{ env.SHA }}](https://github.com/${{github.repository}}/commit/${{github.sha}}) - `${{github.event.head_commit.message}}`" },
            { "name": "Author", "value": "[${{github.event.head_commit.author.name}}](https://github.com/${{github.actor}})" }
            ],
            "color":1127128,
            "timestamp": "${{github.event.head_commit.timestamp}}",
            "footer":{"text": "${{github.event.head_commit.timestamp}}"}
            }    ]'
  deploy:
    name: Deploy Project
    runs-on: ubuntu-latest
    needs: [calculate-version, build]
    if: needs.calculate-version.outputs.branchName == '1.19'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy to CloudSmith
        # Disabled deploy to CloudSmith
        if: false
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: publishMainPublicationToCloudsmithRepository
      - name: Deploy to CurseForge
        # Disabled deploy to CurseForge
        if: false
        env:
          CURSEFORGE_KEY: ${{ secrets.CURSEFORGE_APIKEY }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: publishCurseForge
  tag-latest-version:
    name: Tag Latest Released Version
    runs-on: ubuntu-latest
    needs: [calculate-version, build, deploy]
    if: needs.calculate-version.outputs.branchName == '1.19'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create Tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ needs.calculate-version.outputs.semVer }}
          create_annotated_tag: true
