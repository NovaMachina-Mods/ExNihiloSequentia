# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- 1.19

pool:
  vmImage: ubuntu-latest

steps:
- task: CmdLine@2
  inputs:
    script: |
      curl --location '%discord_webhook_url%' \
      --header 'Content-Type: application/json' \
      --data '{"embeds": [{"title": "Build started for $(Build.Repository.Name)", "description": "Pipeline run $(Build.BuildNumber)", "color": 3224808}]}'
# - task: Gradle@2
#   inputs:
#     workingDirectory: ''
#     gradleWrapperFile: 'gradlew'
#     gradleOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.8'
#     jdkArchitectureOption: 'x64'
#     publishJUnitResults: true
#     testResultsFiles: '**/TEST-*.xml'
#     tasks: 'build'
