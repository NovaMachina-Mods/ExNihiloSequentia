# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  batch: true
  branches:
    include:
      - 1.19
pr:
  branches:
    include:
      - 1.19

pool: Self-hosted Agents

steps:
- task: Bash@3
  name: NotifyDiscordStart
  displayName: Notify Discord of Run Start
  env:
    DISCORD_WEBHOOK_URL: $(Discord.Webhook.Url)
  condition: ne(variables['Build.Reason'], 'PullRequest')
  inputs:
    filePath: 'scripts/discord-notify'
    arguments: 'started 3224808'

- task: Gradle@3
  name: CleanWorkspace
  displayName: Clean Gradle Workspace
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx6144m'
    javaHomeOption: 'JDKVersion'
    tasks: 'clean'

- task: Gradle@3
  name: BuildProject
  displayName: Build Project
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx6144m'
    javaHomeOption: 'JDKVersion'
    tasks: 'build'

- task: Bash@3
  name: ShouldDeploy
  displayName: Should Deploy Project
  condition: eq(variables['Build.SourceBranchName'], 'merge')
  inputs:
    script: |
      echo "##vso[task.setVariable variable=shouldDeploy;]true"

- task: Bash@3
  name: NotifyDiscordDeploy
  displayName: Notify Discord of Deployment
  condition: eq(variables['shouldDeploy'], true)
  env:
    DISCORD_WEBHOOK_URL: $(Discord.Webhook.Url)
  inputs:
    filePath: 'scripts/discord-notify'
    arguments: 'DEPLOYED 3470945'

- task: Bash@3
  name: NotifyDiscordSuccess
  displayName: Notify Discord of Succeeded Build
  env:
    DISCORD_WEBHOOK_URL: $(Discord.Webhook.Url)
  condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Agent.JobStatus'], 'Succeeded'))
  inputs:
    filePath: 'scripts/discord-notify'
    arguments: 'Succeeded 3470945'
- task: CmdLine@2
  name: NotifyDiscordFailure
  displayName: Notify Discord of Failed Build
  env:
    DISCORD_WEBHOOK_URL: $(Discord.Webhook.Url)
  condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Agent.JobStatus'], 'Failed'))
  inputs:
    filePath: 'scripts/discord-notify'
    arguments: 'Failed 16071463'