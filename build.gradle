buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.1.0'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'com.matthewprenger.cursegradle'

def ENV = System.getenv()
version = "${minecraft_release}-${version_major}.${version_api_major}.${version_api_minor}.${version_patch}"
group = "${artifact_group}.${artifact_basename}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${artifact_basename}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
//Print out JVM information so that we know what version is running. Extreamly useful for people to know when helping you.
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'snapshot', version: "${mcp_mappings}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                exnihilosequentia {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                exnihilosequentia {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'exnihilosequentia', '--all', '--output', file('generated/resources/'), '--existing', file('src/main/resources')

            mods {
                exnihilosequentia {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_release}.2:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_release}.2:${jei_version}")

    compileOnly fg.deobf("mcp.mobius.waila:Hwyla:${hwyla_version}_${minecraft_release}.2:api")
    runtime fg.deobf("mcp.mobius.waila:Hwyla:${hwyla_version}_${minecraft_release}.2")

    compileOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-${minecraft_release}:${minecraft_release}-${top_version}:api")
    runtimeOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-${minecraft_release}:${minecraft_release}-${top_version}")

    compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-${minecraft_version}:${crafttweaker_version}")
}

jar {
    manifest {
        attributes([
                "Specification-Title": "Ex Nihilo: Sequentia",
                "Specification-Vendor": "NovaMachina",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"NovaMachina",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

repositories {
    maven { url = "https://dvs1.progwml6.com/files/maven" } // JEI
    maven { url = "https://maven.tehnut.info"} // WAILA
    maven { url = "https://maven.tterrag.com/" } // TOP
    maven { url = 'https://files.minecraftforge.net/maven' }
    maven { url = "https://maven.blamejared.com" } // CraftTweaker
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "${artifact_group}"
            artifactId = "${artifact_basename}"
            version = "${version}"
            artifact jar
        }
    }
    repositories {
//        maven {
//            url "file:///${project.projectDir}/mcmodsrepo"
//        }
        maven {
            credentials {
                username = ENV.NEXUS_USERNAME
                password = ENV.NEXUS_PASSWORD
            }
            url = "https://repo.jacob-williams.me/repository/maven-releases/"
        }
    }
}

if(ENV.CURSEFORGE_KEY) {
    curseforge {
        apiKey = ENV.CURSEFORGE_KEY

        project {
            id = "${curseforge_project}"
            releaseType = 'release'
            mainArtifact jar
            addGameVersion '1.16'
            addGameVersion '1.16.1'
            addGameVersion '1.16.2'
            addGameVersion '1.16.3'
            addGameVersion '1.16.4'
            addGameVersion '1.16.5'
            changelog = file('changelog.md')
            changelogType = 'markdown'
        }
    }
}