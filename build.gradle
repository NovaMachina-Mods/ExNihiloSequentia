import se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url "https://plugins.gradle.org/m2/" }
        maven {
            name 'parchment'
            url 'https://maven.parchmentmc.org'
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'gradle.plugin.se.bjurr.gitchangelog', name: 'git-changelog-gradle-plugin', version: '1.71.4'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

wrapper {
    //Define wrapper values here so as to not have to always do so when updating gradlew.properties
    gradleVersion = '7.3.3'
    distributionType = Wrapper.DistributionType.ALL
}

def ENV = System.getenv()
version = new Date().format("yyyyMMdd-HHmmss")
group = "${artifact_group}"
archivesBaseName = "${artifact_basename}-${minecraft_version}"
def artifactVersion = "${archivesBaseName}-${version}"

sourceSets {
    main {
        resources {
            srcDir 'generated/resources'
        }
    }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    maven { url = "https://dvs1.progwml6.com/files/maven" } // JEI
    maven { url = "https://maven.k-4u.nl" } // TOP
    maven { url = "https://maven.blamejared.com" } // CraftTweaker
    maven {
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    } //jade, ctm, jer, toptemp
}


dependencies {
    minecraft([
            group  : "net.minecraftforge",
            name   : 'forge',
            version: "${minecraft_version}-${forge_major}.${forge_minor}.${forge_patch}"
    ])

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")

    //compileOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-${minecraft_release}:${minecraft_release}-${top_version}:api")
    //runtimeOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-${minecraft_release}:${minecraft_release}-${top_version}")
    implementation fg.deobf("curse.maven:toptemp-245211:${top_version}")

    compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-${minecraft_version}:${crafttweaker_version}")
    runtimeOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-${minecraft_version}:${crafttweaker_version}")

    compileOnly fg.deobf("curse.maven:jade-api-324717:${jade_api_id}")
    runtimeOnly fg.deobf("curse.maven:jade-324717:${jade_id}")

    runtimeOnly fg.deobf("curse.maven:ctm-267602:3586556")
    runtimeOnly fg.deobf("curse.maven:jer-240630:3580623")
}

task replaceResources(type: Copy) {
    outputs.upToDateWhen { false }
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'version': version, 'mc_version': minecraft_version_range, 'forge_version': forge_version_range
    }
    into "$buildDir/resources/main"
}

processResources {
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
    finalizedBy replaceResources
}

task createVersionFile(type: CreateVersionClass) {
    fileVersion = version
}

minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${minecraft_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                exnihilosequentia {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('runserver')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                exnihilosequentia {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            args '--mod', 'exnihilosequentia', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                exnihilosequentia {
                    source sourceSets.main
                }
            }
        }
    }
}

task makeChangelog(type: GitChangelogTask) {
    file = file('changelog.html')
    untaggedName = "Current Release ${version}"
    fromCommit = "1be698f061a24f615c2a770d1190c995259ecbcd"
    toRef = 'HEAD'
    templateContent = file('changelog.mustache').getText('UTF-8')
    fromRepo = file(".")
}

curseforge {
    apiKey = ENV.CURSEFORGE_KEY ?: '0'

    project {
        id = "${curseforge_project}"
        releaseType = 'release'
        mainArtifact jar
        addGameVersion '1.18'
        changelog = file('changelog.html')
        changelogType = 'html'
    }
}

afterEvaluate {
    tasks.curseforge400012.dependsOn createVersionFile
    tasks.jar.dependsOn replaceResources
    tasks.curseforge400012.dependsOn makeChangelog
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Ex Nihilo: Sequentia",
                "Specification-Vendor"    : "NovaMachina",
                "Specification-Version"   : artifactVersion, // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : artifactVersion,
                "Implementation-Vendor"   : "NovaMachina",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = group
            artifactId = archivesBaseName
            version = "${version}"
            artifact jar
        }
    }
    repositories {
//        maven {
//            url "file:///${project.projectDir}/mcmodsrepo"
//        }
        maven {
            credentials {
                username = ENV.NEXUS_USERNAME
                password = ENV.NEXUS_PASSWORD
            }
            url = "https://repo.jacob-williams.me/repository/maven-releases/"
        }
    }
}

abstract class CreateVersionClass extends DefaultTask {
    CreateVersionClass() {
        this.fileVersion = getFileVersion()
    }

    @Input
    abstract Property<String> getFileVersion()

    @TaskAction
    void writeString() {
        FileWriter fw
        fw = new FileWriter('update.json')
        fw.write("{\n" +
                "  \"homepage\": \"https://www.curseforge.com/minecraft/mc-mods/ex-nihilo-sequentia\",\n" +
                "  \"promos\": {\n" +
                "    \"1.18-latest\": \"${fileVersion.get()}\",\n" +
                "    \"1.18-recommended\": \"${fileVersion.get()}\"\n" +
                "  }\n" +
                "}\n")
        fw.close()
    }
}